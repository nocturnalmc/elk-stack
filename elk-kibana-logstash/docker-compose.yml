services:
  elk-kibana:
    image: docker.elastic.co/kibana/kibana:${STACK_VERSION}
    container_name: elk-kibana
    restart: unless-stopped
    volumes:
      - elk-certs:/usr/share/kibana/config/certs
      - kibanadata:/usr/share/kibana/data
    networks:
      - elk-network
    ports:
      - ${KIBANA_PORT}:5601
    environment:
      - SERVERNAME=kibana
      - ELASTICSEARCH_HOSTS=https://elk-es01:9200
      - ELASTICSEARCH_USERNAME=kibana_system
      - ELASTICSEARCH_PASSWORD=${KIBANA_PASSWORD}
      - ELASTICSEARCH_SSL_CERTIFICATEAUTHORITIES=config/certs/ca/ca.crt
      - TELEMETRY_ENABLED=false
    mem_limit: ${MEM_LIMIT}
    healthcheck:
      test:
        [
          'CMD-SHELL',
          "curl -s -I http://localhost:5601 | grep -q 'HTTP/1.1 302 Found'",
        ]
      interval: 10s
      timeout: 10s
      retries: 120

  elk-logstash:
    depends_on:
      elk-kibana:
        condition: service_healthy
    image: docker.elastic.co/logstash/logstash:${STACK_VERSION}
    container_name: elk-logstash
    restart: unless-stopped
    user: root
    volumes:
      - elk-certs:/usr/share/logstash/certs
      - './logstash.conf:/usr/share/logstash/pipeline/logstash.conf:ro'
    networks:
      - elk-network
    environment:
      - xpack.monitoring.enabled=false
      - ELASTIC_USER=elastic
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}

volumes:
  elk-certs:
    external: true
    name: elk-certs
  kibanadata:
    driver: local

networks:
  elk-network:
    name: elk-network
    external: true
