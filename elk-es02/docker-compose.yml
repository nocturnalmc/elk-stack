services:
  elk-es02:
    image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION}
    container_name: elk-es02
    restart: unless-stopped
    volumes:
      - elk-certs:/usr/share/elasticsearch/config/certs
      - elk-es02-vol:/usr/share/elasticsearch/data
    networks:
      - elk-network
    environment:
      - node.name=elk-es02
      - cluster.name=${CLUSTER_NAME}
      - cluster.initial_master_nodes=elk-es01,elk-es02,elk-es03
      - discovery.seed_hosts=elk-es01,elk-es03
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - bootstrap.memory_lock=true
      - xpack.security.enabled=true
      - xpack.security.http.ssl.enabled=true
      - xpack.security.http.ssl.key=certs/elk-es02/elk-es02.key
      - xpack.security.http.ssl.certificate=certs/elk-es02/elk-es02.crt
      - xpack.security.http.ssl.certificate_authorities=certs/ca/ca.crt
      - xpack.security.transport.ssl.enabled=true
      - xpack.security.transport.ssl.key=certs/elk-es02/elk-es02.key
      - xpack.security.transport.ssl.certificate=certs/elk-es02/elk-es02.crt
      - xpack.security.transport.ssl.certificate_authorities=certs/ca/ca.crt
      - xpack.security.transport.ssl.verification_mode=certificate
      - xpack.license.self_generated.type=${LICENSE}
    mem_limit: ${MEM_LIMIT}
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test:
        [
          'CMD-SHELL',
          "curl -s --cacert config/certs/ca/ca.crt https://localhost:9200 | grep -q 'missing authentication credentials'",
        ]
      interval: 10s
      timeout: 10s
      retries: 120

volumes:
  elk-certs:
    external: true
    name: elk-certs
  elk-es02-vol:
    driver: local

networks:
  elk-network:
    name: elk-network
    external: true
